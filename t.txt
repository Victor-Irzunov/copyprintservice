import multer from 'multer';
import { NextApiRequest, NextApiResponse } from 'next';
import fs from 'fs';
import nodemailer from 'nodemailer';
const upload = multer({ dest: 'uploads/' });
export const config = {
  api: {
    bodyParser: false // Don't parse data with Next.js' built-in body parser
  }
}
export default async function handler(req, res) {
  try {
    await new Promise((resolve, reject) => {
      upload.any()(req, res, error => {
        if (error) reject(error);
        else resolve();
      })
    })
    const { name, email, message } = req.body;
    // console.log('name:', name)
    const files = req.files
    console.log('files:', files)
    const transporter = nodemailer.createTransport({
      host: 'smtp.gmail.com',
      port: 587,
      secure: false,
      auth: {
        user: process.env.EMAIL,
        pass: process.env.EMAIL_PASS,
      },
    });

    // Send email
    const info = await transporter.sendMail({
      from: process.env.EMAIL,
      to: email,
      subject: 'Contact form submission',
      text: `
        Name: ${name}
        Email: ${email}
        Message: ${message}
      `,
      attachments: files.map(file => {
        console.log('file.path:', file.path)
        return ({ filename: file.filename,content: fs.createReadStream(file.path) })
      }),
    });
    console.log(`Message sent: ${info.messageId}`);
    res.status(200).json({ message: 'Email sent successfully' });
  } catch (error) {
    console.error(`Error occurred: ${error.message}`);
    res.status(500).json({ error: 'Error occurred while sending email' });
  }
}




 export const sendFotosTelegram = async (obj) => {
	 const files = obj.getAll('photo')
	 const chat_id = obj.get('chat_id')
	const results = [];
 
	for (const file of files) {
	  if (file.size > 10 * 1024 * 1024) { 
		 results.push({ error: `Файл ${file.name} слишком большой для отправки в Telegram` });
		 continue;
	  }
 
	  const formData = new FormData();
	  formData.append('chat_id', chat_id);
	  formData.append('photo', file);
 
	  try {
		 const { data } = await axios.post(`https://api.telegram.org/bot${token}/sendPhoto`, formData, {
			headers: {
			  'Content-Type': 'multipart/form-data'
			}
		 })
		 results.push({ data });
	  } catch (error) {
		 results.push({ error: `Ошибка отправки файла ${photo.name} в Telegram` });
	  }
	}
 
	return results;
 }